def check_connection(network, first, second):
    node1 = [first]
    node2 = [second]
    for i in range(10):
        for i in range(len(network)): 
            a = network[i].split('-') 
            for i in range(len(node1)):
                if a[0] in node1 and a[1] not in node1:
                    node1.append(a[1])
                if a[0] not in node1 and a[1] in node1:
                    node1.append(a[0])
            for i in range(len(node2)):
                if a[0] in node2 and a[1] not in node2:
                    node2.append(a[1])
                if a[0] not in node2 and a[1] in node2:
                    node2.append(a[0])
    if second in node1 or first in node2:
        return True
    else: 
        return False
    
â€‹
if __name__ == '__main__':
    #These "asserts" using only for self-checking and not necessary for auto-testing
    assert check_connection(
        ("dr101-mr99", "mr99-out00", "dr101-out00", "scout1-scout2",
         "scout3-scout1", "scout1-scout4", "scout4-sscout", "sscout-super"),
        "scout2", "scout3") == True, "Scout Brotherhood"
    assert check_connection(
        ("dr101-mr99", "mr99-out00", "dr101-out00", "scout1-scout2",
         "scout3-scout1", "scout1-scout4", "scout4-sscout", "sscout-super"),
        "super", "scout2") == True, "Super Scout"
    assert check_connection(
        ("dr101-mr99", "mr99-out00", "dr101-out00", "scout1-scout2",
         "scout3-scout1", "scout1-scout4", "scout4-sscout", "sscout-super"),
        "dr101", "sscout") == False, "I don't know any scouts."
